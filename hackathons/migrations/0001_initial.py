# Generated by Django 3.2 on 2021-11-05 17:42

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hackathons.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0011_auto_20211005_0448'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.TextField(default='')),
                ('tag_line', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('theme_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=25), default=list, size=None)),
                ('contact_email', models.EmailField(blank=True, default='', max_length=254)),
                ('is_team_required', models.BooleanField(default=False)),
                ('min_team_members', models.IntegerField(default=0)),
                ('max_team_members', models.IntegerField(default=0)),
                ('rules', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('resource', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('submission_requirement', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('logo_image', models.ImageField(blank=True, default='', upload_to=hackathons.models.Hackathon.get_logo_image_path)),
                ('background_image', models.ImageField(blank=True, default='', upload_to=hackathons.models.Hackathon.get_background_image_path)),
                ('allowed_file_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=25), blank=True, default=list, size=None)),
                ('is_video_required', models.BooleanField(blank=True, default=False)),
                ('promotional_video', models.URLField(blank=True, default='')),
                ('start_date_of_hackathon', models.DateField(blank=True, default=datetime.date.today)),
                ('start_time_of_hackathon', models.TimeField(blank=True, default=datetime.time)),
                ('end_date_of_hackathon', models.DateField(blank=True, default=datetime.date.today)),
                ('end_time_of_hackathon', models.TimeField(blank=True, default=datetime.time)),
                ('result_announcement_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('final_reminder', models.TextField(blank=True, default='')),
                ('saved_type', models.CharField(blank=True, choices=[('PUBLISHED', 'PUBLISHED'), ('DRAFT', 'DRAFT')], default='DRAFT', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='hackathon', to='user.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('tag_line', models.TextField(default='')),
                ('about', models.TextField(default='')),
                ('built_with', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(default='', max_length=25), blank=True, default=list, size=None)),
                ('links', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(default=''), blank=True, default=list, size=None)),
                ('video_link', models.URLField(blank=True, default='')),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project', to='hackathons.hackathon')),
                ('student', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='project', to='user.student')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('emails', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), size=None)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='hackathons.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='hackathons.hackathon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_share', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metadata', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('path', models.ImageField(default='', upload_to=hackathons.models.ProjectMedia.get_image_path_and_filename)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hackathons.project')),
            ],
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=25)),
                ('value', models.IntegerField()),
                ('perks', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='hackathons.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='hackathon_participant', serialize=False, to='user.user')),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant', to='hackathons.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='JudgingCriteria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hackathon_judging_criteria', to='hackathons.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254)),
                ('image', models.ImageField(default='', upload_to=hackathons.models.Judge.get_image_path)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judges', to='hackathons.hackathon')),
            ],
        ),
    ]
